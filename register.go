package main

func registerCheck(name string, work Worker, numParams int) {
	workers[name] = work
	parameterLength[name] = numParams
}

func registerChecks() {
	registerCheck("command", command, 1)
	registerCheck("running", Running, 1)
	registerCheck("file", File, 1)
	registerCheck("directory", Directory, 1)
	registerCheck("symlink", Symlink, 1)
	registerCheck("checksum", Checksum, 3)
	registerCheck("temp", Temp, 1)
	registerCheck("port", Port, 1)
	registerCheck("interface", Interface, 1)
	registerCheck("up", Up, 1)
	registerCheck("ip4", Ip4, 2)
	registerCheck("ip6", Ip6, 2)
	registerCheck("gateway", Gateway, 1)
	registerCheck("gatewayinterface", GatewayInterface, 1)
	registerCheck("host", Host, 1)
	registerCheck("tcp", TCP, 1)
	registerCheck("udp", TCP, 1)
	registerCheck("tcptimeout", tcpTimeout, 2)
	registerCheck("udptimeout", udpTimeout, 2)
	registerCheck("routingtabledestination", RoutingTableDestination, 1)
	registerCheck("routingtableinterface", RoutingTableInterface, 1)
	registerCheck("routingtablegateway", RoutingTableGateway, 1)
	registerCheck("module", Module, 1)
	registerCheck("kernelparameter", KernelParameter, 1)
	registerCheck("dockerimage", DockerImage, 1)
	registerCheck("dockerrunning", DockerRunning, 1)
	registerCheck("groupexists", GroupExists, 1)
	registerCheck("useringroup", UserInGroup, 2)
	registerCheck("groupid", GroupId, 2)
	registerCheck("userexists", UserExists, 1)
	registerCheck("userhasuid", UserHasUID, 2)
	registerCheck("userhasgid", UserHasGID, 2)
	registerCheck("userhasusername", UserHasUsername, 2)
	registerCheck("userhasname", UserHasName, 2)
	registerCheck("userhashomedir", UserHasHomeDir, 2)
	registerCheck("installed", Installed, 1)
	registerCheck("repoexists", repoExists, 2)
	registerCheck("repoexistsuri", repoExistsURI, 2)
	registerCheck("pacmanignore", pacmanIgnore, 1)
	registerCheck("systemctlloaded", systemctlLoaded, 1)
	registerCheck("systemctlactive", systemctlActive, 1)
	registerCheck("systemctlsockpath", systemctlSockPath, 1)
	registerCheck("systemctlsockunit", systemctlSockUnit, 1)
	registerCheck("systemctltimer", systemctlTimer, 1)
	registerCheck("systemctltimerloaded", systemctlTimerLoaded, 1)
	registerCheck("systemctlunitfilestatus", systemctlUnitFileStatus, 2)
}
